variables:
 GIT_SUBMODULE_STRATEGY: recursive    # clone submodules
 GIT_LFS_SKIP_SMUDGE: "1"             # ignore lfs (some problems with vadere submodule)
 CROWNET_HOME: '${CI_PROJECT_DIR}'    # all files relative to this.
 OPP_CONT_TAG: '6.0pre10'             # tag of OMNeT++ container to be used
 OPP: '${CI_PROJECT_DIR}/scripts/omnetpp ${OPP_CONT_TAG} exec'


stages:
  - build
  - test
  - simulation-campaign


cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - ./venv

# Build all dependencies of the crownet project (default: release mode)
# This is the base for running simulation campaings on a dedicated
# gitlab runner with more cores and memmory. Use latest version of containers
build-for-sim:
  stage: build
  tags:
    - crownet-sim
  variables:
    ARTERY_M: '${CI_PROJECT_DIR}/artery'
    INET_M: '${CI_PROJECT_DIR}/inet4'
    LTE_M: '${CI_PROJECT_DIR}/simulte'
    CROWNET_M: '${CI_PROJECT_DIR}/crownet'
    VEINS_M: '${CI_PROJECT_DIR}/veins'
    VEINS_INET_M: '${CI_PROJECT_DIR}/veins/subprojects/veins_inet'
    ANALYZER_M: '${CI_PROJECT_DIR}/analysis/roveranalyzer'
    MODE: 'release'
  script:
    # ## update required docker images
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker pull $CI_REGISTRY/rover/crownet/omnetpp
    - docker pull $CI_REGISTRY/rover/crownet/sumo
    - docker pull $CI_REGISTRY/rover/crownet/vadere
    # ## build all models
    - "${OPP} make makefiles"
    - "${OPP} make MODE=${MODE}"
    # ## export inet version
    - "cd ${INET_M}"
    - "export INET_VERSION=$(./_scripts/get_version)"
    # inet> cleanup not needed directories
    - rm -rf doc examples showcases tutorials
    # ## cleanup not needed directories in veins
    - "cd ${VEINS_M}"
    - rm -rf doc examples subprojects/veins_catch subprojects/veins_inet3 subprojects/veins_testsims
    # ## global cleanup
    - "cd ${CROWNET_HOME}"
    - "find . -name \"*.o\" -type f -delete"
    - "cd ${INET_M}"
    # inet> only delete inet sources for artefacts. We may need the other ones.
    - "find . -name \"*.cc\" -type f -delete"
    # artery> only use keep libs and h files.
    - "cd ${ARTERY_M}"
    - rm -rf scenarios cmake
    - "find . -name \"*.o\" -type f -delete"
    - "find . -name \"*.cc\" -type f -delete"
    - "find build/ -type f -not -path '*.so' -delete"
    - "find extern/vanetza/build -type f -not -path '*.so' -delete"
    # build analyzer
    - "cd ${ANALYZER_M}"
    - python3 setup.py sdist
  artifacts:
    paths:
    - ${CROWNET_HOME}/scripts
    - ${CROWNET_HOME}/simulte
    - ${CROWNET_HOME}/inet4
    - ${CROWNET_HOME}/crownet
    - ${CROWNET_HOME}/veins
    - ${CROWNET_HOME}/artery
    - ${ANALYZER_M}/dist
    expire_in: 1 weeks

# run the unit tests
gtests:
  stage: test
  tags:
    - crownet-sim
  script:
    - "cd ${CROWNET_HOME}/crownet"
    - "${OPP} make test"
  artifacts:
    when: always
    paths:
    - ${CROWNET_HOME}/crownet/tests/fingerprint
    expire_in: 8 weeks

# run the fingerprint tests
fingerprints:
  stage: test
  tags:
    - crownet-sim
  variables:
    ANALYZER_M: '${CI_PROJECT_DIR}/analysis/roveranalyzer/'
  script:
    - virtualenv --system-site-packages --python py38 ./venv
    - source ./venv/bin/activate
    - "pip3 install -I ${ANALYZER_M}/dist/*.tar.gz"
    - "cd ${CROWNET_HOME}/crownet/tests/fingerprint"
    - ./fingerprints
  artifacts:
    when: always
    paths:
    - ${CROWNET_HOME}/crownet/tests/fingerprint
    expire_in: 8 weeks

# run the opp tests
opp-tests:
  stage: test
  tags:
    - crownet-sim
  script:
    - "cd ${CROWNET_HOME}/tests/omnetpp"
    - "${OPP} ./runtest"
  artifacts:
    when: always
    paths:
    - ${CROWNET_HOME}/crownet/tests/omnetpp
    expire_in: 8 weeks

# run given simulation-campaign
simulation-campaign:
  stage: simulation-campaign
  tags:
    - crownet-sim
  rules:
    - if: '$SIM_TRIGGER'
  script:
    - "/bin/bash ${CROWNET_HOME}/$SIM_SCRIPT"
    - "echo ${CI_COMMIT_SHA} > ${CROWNET_HOME}/$SIM_SCRIPT-results/commit-hash"
    - "echo ${CI_PIPELINE_IID} > ${CROWNET_HOME}/$SIM_SCRIPT-results/pipeline-id"
    - "cat /proc/cpuinfo > > ${CROWNET_HOME}/$SIM_SCRIPT-results/cpuinfo"
  artifacts:
    paths:
      - ${CROWNET_HOME}/$SIM_SCRIPT
      - ${CROWNET_HOME}/$SIM_SCRIPT-results
      - ${CROWNET_HOME}/scripts
      - ${CROWNET_HOME}/simulte/src
      - ${CROWNET_HOME}/inet4/src
      - ${CROWNET_HOME}/crownet
      - ${CROWNET_HOME}/veins/src
      - ${CROWNET_HOME}/veins/subprojects/veins_inet/src
    expire_in: 4 weeks
