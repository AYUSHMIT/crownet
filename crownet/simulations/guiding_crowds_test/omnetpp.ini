[General]
network = crownet.simulations.networks.World
image-path=../../images
print-undisposed = true

#============= Simulation parameters ================
sim-time-limit=50s
#warmup-period=60s      # Note: When analyzing the results, you need to apply the same warmup-period to measurement data!
repeat = 1

#============= Statistics ===========================
outputvectormanager-class="omnetpp::envir::SqliteOutputVectorManager"
outputscalarmanager-class="omnetpp::envir::SqliteOutputScalarManager"
experiment-label = ${datetime} # use ${experiment}
output-scalar-file = ${resultdir}/${configname}_${experiment}/vars_${iterationvarsf}rep_${repetition}.sca
output-vector-file = ${resultdir}/${configname}_${experiment}/vars_${iterationvarsf}rep_${repetition}.vec
cmdenv-output-file = ${resultdir}/${configname}_${experiment}/vars_${iterationvarsf}rep_${repetition}.out
seed-set = ${repetition}

**.vector-recording = true
**.scalar-recording = true
#**.statistic-recording = false
**.routingRecorder.enabled = false


#============= Mobility parameters ==================
**.mobility.constraintAreaMinZ = 0m
**.mobility.constraintAreaMaxZ = 0m

#============= AMC module parameters ===============
**.ueTxPower = 20
**.eNodeBTxPower = 20
**.numRbDl = 20
**.numRbUl = 20
**.numBands = 20

#============= Channel control parameters ===========
**.channelControl.pMax = 1W
**.channelControl.alpha = 1.0
**.channelControl.carrierFrequency = 2600e+6Hz


#============= Channel model parameters =============
# for a complete list of all parameters:
#   refer to LteChannelModels.ned
**.channelModel.shadowing = true
**.channelModel.scenario = "URBAN_MICROCELL"
**.channelModel.nodeb_height = 25
**.channelModel.ue_height = 1.5
**.channelModel.building_height = 20

**.channelModel.street_wide = 20
**.channelModel.carrierFrequency = 2.6  # carrier frequency (in GHz)
**.channelModel.antennaGainUe = 0
**.channelModel.antennGainEnB = 0

**.channelModel.correlation_distance = 25
**.channelModel.dynamic_los = true   # If true enable the possibility to switch dinamically the LOS/NLOS pathloss computation
**.channelModel.fixed_los = false      # If dynamic-los is false this parameter, if true, compute LOS pathloss otherwise compute NLOS pathloss
**.channelModel.fading = false        # Enable/disable fading
**.channelModel.fading_type = "JAKES" # Fading type (JAKES or RAYGHLEY) if fading is enabled
**.channelModel.fading_paths = 6      # If jakes fading this parameter specify the number of path (tap channel)
**.channelModel.delay_rms = 363e-9

**.channelModel.extCell_interference = false # if true, enables the inter-cell interference computation for DL connections from external cells
**.channelModel.downlink_interference = true # if true, enables the inter-cell interference computation for DL connections
**.channelModel.uplink_interference = true   # if true, enables the interference computation for UL connections
**.channelModel.d2d_interference = true      # if true, enables the interference computation for D2D connections

#============= Protocol stack parameters  ===========
#(as in OpenAirInterface Configuration)
**.rlc.um.queueSize = 5000000B              # OpenAirInterface queue limit for RLC_MODE_UM  (Commit f58ad3c39f04ca7305202749a7dad2b25ef6b942 file rlc.c  method rlc_data_req() line 478)
**.mac.queueSize = 10000B					# reduce MAC queue size - OpenAirInterface does not queue packets in mac layer
**.pdcpRrc.backgroundRlc = 1                # default RLC type (0: TM, 1: UM, 2: AM)


#=============  defaults  ===========
# eNodeB
*.eNB.mobility.initFromDisplayString = false
*.eNB.mobility.initialX = 20m
*.eNB.mobility.initialY = 20m
*.eNB*.nicType = "LteNicEnbD2D"
*.eNB*.lteNic.mac.amcMode = "D2D"

# UE
*.node[*].macCellId = 1
*.node[*].masterId = 1
*.node[*].nicType = "LteNicUeD2D"
*.node[*].radioDriver.dispatchInterfaceName = "cellular"
*.node[*].lteNic.mac.amcMode = "D2D" #"D2D"
*.node[*].lteNic.address = "auto"

**.coordConverterModule = "coordConverter"
**.identiyRegistryModule = "identiyRegistry"
*.configurator.config = xmldoc("ip4Config.xml")

# PhysicalEnviroment (*.physicalEnvironment.config set by other config)
*.physicalEnvironment.spaceMinX = -100m
*.physicalEnvironment.spaceMinY = -100m
*.physicalEnvironment.spaceMinZ = -100m
*.physicalEnvironment.spaceMaxX = 600m
*.physicalEnvironment.spaceMaxY = 600m
*.physicalEnvironment.spaceMaxZ = 600m

# END General

[Config D2D_General]

## Enrolled multicast groups (TraCI) ##
#  Must be set in the HostAutoConfigurator (instead of ip4Config.xml), seperated by a single space character
*.node*[*].configurator.interfaces = "cellular" #"wlan"
*.node*[*].configurator.addressBase = "20.0.0.0"
*.node*[*].configurator.netmask = "255.0.0.0"

**.rlc.um.mapAllLcidsToSingleBearer = true  # OpenAirInterface uses a single bearer for all data
*.eNB.lteNic.processingDelayIn = 1134us    # additional processing delays
*.eNB.lteNic.processingDelayOut = 1134us
*.node*[*].lteNic.processingDelayIn = 5518us
*.node*[*].lteNic.processingDelayOut = 1134us

### Select CQI for D2D transmissions ###
# One-to-Many commulteNications work with fixed CQI values only. Set the parameter **.usePreconfiguredTxParams and
# select the desired CQI using the parameter **.d2dCqi
**.usePreconfiguredTxParams = true
**.d2dCqi = 7

# END D2D_General

[Config AidSetup]
*.traci.launcher.hostname = "vadere_rover_run"
*.traci.launcher.port = 9998
*.node[*].useArtery = false
# NeighborhoodTable 
*.node[*].nTable.typename = "crownet.common.NeighborhoodTable"
*.node[*].nTable.maxAge = 7s
# DcDMap Application
*.node[*].aid.densityMapApp.typename = "crownet.applications.aid.DensityMapAppSimple"
*.node[*].aid.densityMapApp.appMainInterval = 2s
*.node[*].aid.densityMapApp.startTime = uniform(0s,0.02s)
# Beacon Application
*.node[*].aid.beaconApp.typename = "crownet.applications.aid.BeaconSimple"
*.node[*].aid.beaconApp.startTime = uniform(0s,0.02s)

[Config flowcontrolTest]
extends = D2D_General, AidSetup
*.traci.launcher.vadereScenarioPath = "vadere/scenarios/test001.scenario"
*.physicalEnvironment.config = xmldoc("vadere/scenarios/test001_env.xml")
*.flowController.typename =  "" # "crownet.control.ControlManager"
*.flowController.host = "control_rover_run" # "flowcontrol"
*.flowController.port = 9997
*.flowController.coreModule = "traci.core"

[Config final]
extends = flowcontrolTest
