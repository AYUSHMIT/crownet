[General]
network = crownet.simulations.networks.World
image-path=../../images
# tkenv-plugin-path = ../../../inet/etc/plugins
print-undisposed = true

#============= Simulation parameters ================
sim-time-limit=30s
#warmup-period=60s      # Note: When analyzing the results, you need to apply the same warmup-period to measurement data!
repeat = 1

#============= Statistics ===========================
outputvectormanager-class="omnetpp::envir::SqliteOutputVectorManager"
outputscalarmanager-class="omnetpp::envir::SqliteOutputScalarManager"
experiment-label = ${datetime} # use ${experiment}
output-scalar-file = ${resultdir}/${configname}_${experiment}/vars_${iterationvarsf}rep_${repetition}.sca
output-vector-file = ${resultdir}/${configname}_${experiment}/vars_${iterationvarsf}rep_${repetition}.vec
cmdenv-output-file = ${resultdir}/${configname}_${experiment}/vars_${iterationvarsf}rep_${repetition}.out
seed-set = ${repetition}
**.vector-recording = false # TESTING ONLY
**.scalar-recording = false # TESTING ONLY

#============= AMC module parameters ===============
**.ueTxPower = 20
**.eNodeBTxPower = 20
**.numRbDl = 20
**.numRbUl = 20
**.numBands = 20

#============= Channel control parameters ===========
**.channelControl.pMax = 1W
**.channelControl.alpha = 1.0
**.channelControl.carrierFrequency = 2600e+6Hz


#============= Channel model parameters =============
# for a complete list of all parameters:
#   refer to LteChannelModels.ned
**.channelModel.shadowing = true
**.channelModel.scenario = "URBAN_MICROCELL"
**.channelModel.nodeb_height = 25
**.channelModel.ue_height = 1.5
**.channelModel.building_height = 20

**.channelModel.street_wide = 20
**.channelModel.carrierFrequency = 2.6  # carrier frequency (in GHz)
**.channelModel.antennaGainUe = 0
**.channelModel.antennGainEnB = 0

**.channelModel.correlation_distance = 25
**.channelModel.dynamic_los = true   # If true enable the possibility to switch dinamically the LOS/NLOS pathloss computation
**.channelModel.fixed_los = false      # If dynamic-los is false this parameter, if true, compute LOS pathloss otherwise compute NLOS pathloss
**.channelModel.fading = false        # Enable/disable fading
**.channelModel.fading_type = "JAKES" # Fading type (JAKES or RAYGHLEY) if fading is enabled
**.channelModel.fading_paths = 6      # If jakes fading this parameter specify the number of path (tap channel)
**.channelModel.delay_rms = 363e-9

**.channelModel.extCell_interference = false # if true, enables the inter-cell interference computation for DL connections from external cells
**.channelModel.downlink_interference = true # if true, enables the inter-cell interference computation for DL connections
**.channelModel.uplink_interference = true   # if true, enables the interference computation for UL connections
**.channelModel.d2d_interference = true      # if true, enables the interference computation for D2D connections

#============= Protocol stack parameters  ===========
#(as in OpenAirInterface Configuration)
**.rlc.um.queueSize = 5000000B              # OpenAirInterface queue limit for RLC_MODE_UM  (Commit f58ad3c39f04ca7305202749a7dad2b25ef6b942 file rlc.c  method rlc_data_req() line 478)
**.mac.queueSize = 10000B					# reduce MAC queue size - OpenAirInterface does not queue packets in mac layer
**.pdcpRrc.backgroundRlc = 1                # default RLC type (0: TM, 1: UM, 2: AM)


#============= eNodeB and UE defaults  ===========
# eNB
*.eNB.mobility.initFromDisplayString = false
*.eNB.mobility.initialX = 20m
*.eNB.mobility.initialY = 20m
*.eNB*.nicType = "LteNicEnbD2D"
*.eNB*.lteNic.mac.amcMode = "D2D"

################ Node Settings #####################
## see World.ned

*.hasStoryboard = false
*.hasGlobalMap = false
*.hasWlan = false


################ Node Settings #####################
## see traci.mapper.objectType ="crownet.nodes.PedestrianFull"

*.node[*].macCellId = 1
*.node[*].masterId = 1
*.node[*].nicType = "LteNicUeD2D"
*.node[*].radioDriver.dispatchInterfaceName = "cellular"
*.node[*].lteNic.mac.amcMode = "D2D"
*.node[*].lteNic.address = "auto"
*.node[*].useArtery = true
*.node[*].aid.hasDensityMap = false
*.node[*].middleware.updateInterval = 0.1s # application trigger
*.node[*].middleware.datetime = "2020-06-01 12:35:00"
*.node[*].middleware.services = xml("<services/>")
*.node[*].middleware.DenService.useCases = xml("<usecases/>")
*.node[*].numApps = 0 # !!!!

**.coordConverterModule = "coordConverter"
**.identiyRegistryModule = "identiyRegistry"

## Enrolled multicast groups (TraCI) ##
#  Must be set in the HostAutoConfigurator (instead of ip4Config.xml), seperated by a single space character
*.node*[*].configurator.interfaces = "cellular"
*.node*[*].configurator.addressBase = "20.0.0.0"
*.node*[*].configurator.netmask = "255.0.0.0"


[Config sumoBase]

*.traci.launcher.typename = "ConnectLauncher"
*.traci.launcher.hostname = "sumo"
*.traci.launcher.port = 9999
*.traci.core.version = -1
*.traci.core.typename = "Core"
*.traci.core.selfStopping = true

*.traci.subscriptions.typename = "BasicSubscriptionManager"
*.traci.nodes.typename = "BasicNodeManager"

*.traci.mapper.typename = "BasicModuleMapper"
*.traci.mapper.objectType = "crownet.nodes.PedestrianFull"
*.node[*].mobility.typename = "artery.inet.Mobility"

*.node[*].middleware.typename = "VehicleMiddleware"
*.node[*].middleware.routerModule = ".vanetza.router"
*.node[*].middleware.mobilityModule = ".mobility"
*.node[*].vanetza.position.typename = "VehiclePositionProvider"
*.physicalEnvironment.config = xml("<environment/>")



[Config vadereBase]

*.traci.launcher.hostname = "vadere"
*.traci.launcher.port = 9998
*.traci.launcher.vadereScenarioPath = "vadere/scenarios/mf_2peds.scenario"
*.traci.core.version = -1
*.traci.core.typename = "VadereCore"
*.traci.core.selfStopping = false

*.traci.subscriptions.typename = "VadereSubscriptionManager"
*.traci.nodes.typename = "VadereNodeManager"

*.traci.mapper.objectType = "crownet.nodes.PedestrianFull"
*.node[*].mobility.typename  = "crownet.artery.traci.MobilityRoverArtery"

*.node[*].middleware.typename = "PedestrianMiddleware"
*.node[*].vanetza.position.typename = "PedestrianPositionProvider"
*.physicalEnvironment.config = xmldoc("vadere/scenarios/mf_2peds_env.xml")


