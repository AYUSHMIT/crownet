//
// Generated file, do not edit! Created by nedtool 5.6 from rover/artery/lte/GeoNetTag.msg.
//

#ifndef __ROVER_GEONETTAG_M_H
#define __ROVER_GEONETTAG_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0506
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif

// dll export symbol
#ifndef ROVER_API
#  if defined(ROVER_EXPORT)
#    define ROVER_API  OPP_DLLEXPORT
#  elif defined(ROVER_IMPORT)
#    define ROVER_API  OPP_DLLIMPORT
#  else
#    define ROVER_API
#  endif
#endif


namespace rover {

class GeoNetTag;
} // namespace rover

#include "inet/common/INETDefs_m.h" // import inet.common.INETDefs

#include "inet/common/TagBase_m.h" // import inet.common.TagBase

#include "inet/common/packet/chunk/Chunk_m.h" // import inet.common.packet.chunk.Chunk

#include "inet/linklayer/common/MacAddress_m.h" // import inet.linklayer.common.MacAddress


namespace rover {

/**
 * Class generated from <tt>rover/artery/lte/GeoNetTag.msg:24</tt> by nedtool.
 * <pre>
 * class GeoNetTag extends inet::TagBase
 * {
 *     uint32 srcAddrIp;
 *     uint32 dstAddrIp;
 *     inet::MacAddress srcAddrMac;
 *     inet::MacAddress dstAddrMac;
 * }
 * </pre>
 */
class ROVER_API GeoNetTag : public ::inet::TagBase
{
  protected:
    uint32_t srcAddrIp = 0;
    uint32_t dstAddrIp = 0;
    inet::MacAddress srcAddrMac;
    inet::MacAddress dstAddrMac;

  private:
    void copy(const GeoNetTag& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const GeoNetTag&);

  public:
    GeoNetTag();
    GeoNetTag(const GeoNetTag& other);
    virtual ~GeoNetTag();
    GeoNetTag& operator=(const GeoNetTag& other);
    virtual GeoNetTag *dup() const override {return new GeoNetTag(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual uint32_t getSrcAddrIp() const;
    virtual void setSrcAddrIp(uint32_t srcAddrIp);
    virtual uint32_t getDstAddrIp() const;
    virtual void setDstAddrIp(uint32_t dstAddrIp);
    virtual const inet::MacAddress& getSrcAddrMac() const;
    virtual inet::MacAddress& getSrcAddrMacForUpdate() { return const_cast<inet::MacAddress&>(const_cast<GeoNetTag*>(this)->getSrcAddrMac());}
    virtual void setSrcAddrMac(const inet::MacAddress& srcAddrMac);
    virtual const inet::MacAddress& getDstAddrMac() const;
    virtual inet::MacAddress& getDstAddrMacForUpdate() { return const_cast<inet::MacAddress&>(const_cast<GeoNetTag*>(this)->getDstAddrMac());}
    virtual void setDstAddrMac(const inet::MacAddress& dstAddrMac);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const GeoNetTag& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, GeoNetTag& obj) {obj.parsimUnpack(b);}

} // namespace rover

#endif // ifndef __ROVER_GEONETTAG_M_H

