[General]


sim-time-limit = 120s
**.routingRecorder.enabled = true

outputvectormanager-class="omnetpp::envir::SqliteOutputVectorManager"
outputscalarmanager-class="omnetpp::envir::SqliteOutputScalarManager"


############### Statistics ##################
experiment-label = ${datetime}
output-scalar-file = ${resultdir}/${configname}/${experiment}/${datetime}_vars_${iterationvarsf}_rep_${repetition}.sca
output-vector-file = ${resultdir}/${configname}/${experiment}/${datetime}_vars_${iterationvarsf}_rep_${repetition}.vec
repeat = 2
seed-set = ${repetition}
**.vector-recording = true
**.scalar-recording = true

################ Mobility parameters #####################
**.mobility.constraintAreaMinZ = 0m
**.mobility.constraintAreaMaxZ = 0m


############### AMC MODULE PARAMETERS ###############
**.numRbDl = 25
**.numRbUl = 25
**.numBands = 25

############### Channel model parameters ###############

**.channelModel.shadowing = true
**.channelModel.scenario = "URBAN_MICROCELL"
**.channelModel.nodeb_height = 1.5
**.channelModel.ue_height = 1.5
**.channelModel.building_height = 20

**.channelModel.street_wide = 20
**.channelModel.carrierFrequency = 2.6  # carrier frequency (in GHz)
**.channelModel.antennaGainUe = 0
**.channelModel.antennGainEnB = 0

**.channelModel.dynamic_los = false   # If true enable the possibility to switch dinamically the LOS/NLOS pathloss computation
**.channelModel.fixed_los = true      # If dynamic-los is false this parameter, if true, compute LOS pathloss otherwise compute NLOS pathloss
**.channelModel.fading = false        # Enable/disable fading
**.channelModel.fading_type = "JAKES" # Fading type (JAKES or RAYGHLEY) if fading is enabled
**.channelModel.fading_paths = 6      # If jakes fading this parameter specify the number of path (tap channel)
**.channelModel.delay_rms = 363e-9

**.channelModel.extCell_interference = false # if true, enables the inter-cell interference computation for DL connections from external cells
**.channelModel.downlink_interference = true # if true, enables the inter-cell interference computation for DL connections
**.channelModel.uplink_interference = true   # if true, enables the interference computation for UL connections
**.channelModel.d2d_interference = true      # if true, enables the interference computation for D2D connections

############### eNodeB and UE defaults ###############

### eNodeBs configuration ###
*.eNB.mobility.initFromDisplayString = false
*.eNB.mobility.initialX = 20m
*.eNB.mobility.initialY = 20m
*.eNB*.nicType = "LteNicEnbD2D"
*.eNB*.lteNic.mac.amcMode = "D2D"


### UEs configuration (ueCell * ueD2DReceiver * ueD2DSender) ### 
*.numUeCell = 0			# static Nodes
*.numUeD2DReceiver = 0	# dynamic Nodes
*.numUeD2DSender = 0	# dynamic Nodes
*.ue*[*].macCellId = 1
*.ue*[*].masterId = 1
*.ueD2D*[*].nicType = "LteNicUeD2D"
*.ueD2D*[*].lteNic.mac.amcMode = "D2D" #"D2D"
*.ueCell[*].nicType = "LteNicUeD2D"
*.ueCell[*].lteNic.mac.amcMode = "D2D" #"D2D"

### Select CQI for D2D transmissions ###
# One-to-Many commulteNications work with fixed CQI values only. Set the parameter **.usePreconfiguredTxParams and
# select the desired CQI using the parameter **.d2dCqi
**.usePreconfiguredTxParams = true
**.d2dCqi = 7


[Config appSetup1]

### Traffic configuration ###
network = rover.simulations.networks.LTE_d2d

## Enrolled multicast groups (TraCI) ## 
#  Must be set in the HostAutoConfigurator (instead of demo.xml), seperated by a single space character
*.ueD2D*[*].configurator.mcastGroups = "224.0.0.10"
*.ueD2D*[*].configurator.addressBase = "20.0.0.0"
*.ueD2D*[*].configurator.netmask = "255.0.0.0"

## ueD2DSender ##
*.ueD2DSender[*].numApps = 3
*.ueD2DSender[*].app[0].typename = "AlertSender"
*.ueD2DSender[*].app[0].localPort = 3088+ancestorIndex(0)
*.ueD2DSender[*].app[0].startTime = 0s
*.ueD2DSender[*].app[0].stopTime = 350s
*.ueD2DSender[*].app[0].destAddress = "224.0.0.10"          # IP address of the multicast group
*.ueD2DSender[*].app[0].destPort = 1000
*.ueD2DSender[*].app[1].typename = "AlertReceiver"
*.ueD2DSender[*].app[1].localPort = 1000
*.ueD2DSender[*].app[2].typename = "UdpVideoStreamClient"
*.ueD2DSender[*].app[2].serverAddress = "server"
*.ueD2DSender[*].app[2].localPort = 9999
*.ueD2DSender[*].app[2].serverPort = 3088
*.ueD2DSender[*].app[2].startTime = uniform(0s, 0.02s)  

## ueD2DReceiver ##
*.ueD2DReceiver[*].numApps = 1
*.ueD2DReceiver[*].app[0].typename = "AlertReceiver"
*.ueD2DReceiver[*].app[0].localPort = 1000


[Config vadere00]
extends = appSetup1
network = rover.simulations.networks.LTE_d2d_Vadere

*.numMappings = 1
*.mappingDistribution[0].mapping_root="pedestrian"
*.mappingDistribution[0].mapping_moduleName="p1=ueD2DReceiver p2=ueD2DSender"
*.mappingDistribution[0].mapping_distribution="p1=${Receiver= 0.3, 0.7} p2=${Sender= 0.7, 0.3 ! Receiver}"


# traci manager
*.manager.updateInterval = 0.4s
*.manager.host = "vadere"
*.manager.port = 9998
*.manager.moduleType = "pedestrian=rover.nodes.MobileUe"
*.manager.moduleName = "pedestrian=ueD2D"
*.manager.moduleDisplayString = "pedestrian='i=veins/node/pedestrian;is=vs'"
*.manager.margin = 0
*.manager.vadereCachePath = "vadere-cache/veins-test"
*.manager.visualizer = "visualization"
*.manager.vadereScenarioPath = "vadere/scenarios/mf_klein_initial_peds.scenario"


# PhysicalEnviroment
*.physicalEnvironment.config = xmldoc("mf_klein_initial_peds_env.xml")
*.physicalEnvironment.spaceMinX = -100m
*.physicalEnvironment.spaceMinY = -100m
*.physicalEnvironment.spaceMinZ = -100m
*.physicalEnvironment.spaceMaxX = 600m
*.physicalEnvironment.spaceMaxY = 600m
*.physicalEnvironment.spaceMaxZ = 600m


[Config vadere01]
extends = vadere00
*.manager.vadereScenarioPath = "vadere/scenarios/mf_2peds.scenario"
*.numMappings = 1
*.mappingDistribution[0].mapping_root="pedestrian"
*.mappingDistribution[0].mapping_moduleName="p1=ueD2DReceiver p2=ueD2DSender"
*.mappingDistribution[0].mapping_distribution="p1=0.0 p2=1.0"
   

## ueCell (Stationary not managed by TraCI) ##
*.numUeCell = 1
*.ueCell[0].mobility.initFromDisplayString = false
*.ueCell[0].mobilityType = "StationaryMobility"
*.ueCell[0].mobility.initialX = 140m
*.ueCell[0].mobility.initialY = 135m
*.ueCell[0].numApps = 3
*.ueCell[0].app[0].typename = "AlertSender"
*.ueCell[0].app[0].localPort = 3088+ancestorIndex(0)
*.ueCell[0].app[0].startTime = 0s
*.ueCell[0].app[0].stopTime = 350s
*.ueCell[0].app[0].destAddress = "224.0.0.10"          # IP address of the multicast group
*.ueCell[0].app[0].destPort = 1000
*.ueCell[0].app[1].typename = "AlertReceiver"
*.ueCell[0].app[1].localPort = 1000
*.ueCell[0].app[2].typename = "UdpVideoStreamClient"
*.ueCell[0].app[2].serverAddress = "server"
*.ueCell[0].app[2].localPort = 9999
*.ueCell[0].app[2].serverPort = 3088
*.ueCell[0].app[2].startTime = 0s     

## server (Stationary not managed by TraCI) ##
**.server.numApps = 1
**.server.app[0].typename = "UdpVideoStreamServer"
**.server.app[0].videoSize = int(normal(20MiB, 3MiB))
**.server.app[0].localPort = 3088
**.server.app[0].sendInterval = 20ms
**.server.app[0].packetLen = int(normal(1000B, 200B))


[Config sumo00]
extends = appSetup1
network = rover.simulations.networks.LTE_d2d_SUMO

# SUMO Setup
*.playgroundSizeX = 2500m
*.playgroundSizeY = 2500m
*.playgroundSizeZ = 50m
*.annotations.draw = true

# PhysicalEnviroment
*.manager.sumoConfigDir = "sumo"
*.manager.launchConfig = xmldoc("sumo/mf_base_001.launchd.xml")
*.manager.moduleType = "DEFAULT_PEDTYPE=rover.nodes.MobileUe"
*.manager.moduleName = "DEFAULT_PEDTYPE=ueD2D"
*.manager.moduleDisplayString = "DEFAULT_PEDTYPE='i=veins/node/pedestrian;is=vs'"
*.manager.updateInterval = 0.5s
*.manager.host = "sumo"
*.manager.port = 9999
*.manager.autoShutdown = true

*.ueD2D*[0].app[*].stopTime = 12.9s
