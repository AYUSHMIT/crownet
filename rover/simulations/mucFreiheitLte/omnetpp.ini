[General]
network = rover.simulations.networks.World
image-path=../../images
tkenv-plugin-path = ../../../inet/etc/plugins
print-undisposed = true

#============= Simulation parameters ================
sim-time-limit=30s
#warmup-period=60s      # Note: When analyzing the results, you need to apply the same warmup-period to measurement data!
repeat = 1

#============= Statistics ===========================
outputvectormanager-class="omnetpp::envir::SqliteOutputVectorManager"
outputscalarmanager-class="omnetpp::envir::SqliteOutputScalarManager"
experiment-label = ${datetime} # use ${experiment}
output-scalar-file = ${resultdir}/${configname}_${experiment}/vars_${iterationvarsf}rep_${repetition}.sca
output-vector-file = ${resultdir}/${configname}_${experiment}/vars_${iterationvarsf}rep_${repetition}.vec
cmdenv-output-file = ${resultdir}/${configname}_${experiment}/vars_${iterationvarsf}rep_${repetition}.out
seed-set = ${repetition}
**.vector-recording = true
**.scalar-recording = true
**.routingRecorder.enabled = false
#*.node[*].vector-recording = true
#*.node[*].scalar-recording = true

#============= Mobility parameters ==================
**.mobility.constraintAreaMinZ = 0m
**.mobility.constraintAreaMaxZ = 0m

#============= AMC module parameters ===============
**.ueTxPower = 20
**.eNodeBTxPower = 20
**.numRbDl = 20
**.numRbUl = 20
**.numBands = 20

#============= Channel control parameters ===========
**.channelControl.pMax = 1W
**.channelControl.alpha = 1.0
**.channelControl.carrierFrequency = 2600e+6Hz


#============= Channel model parameters =============
# for a complete list of all parameters:
#   refer to LteChannelModels.ned
**.channelModel.shadowing = true
**.channelModel.scenario = "URBAN_MICROCELL"
**.channelModel.nodeb_height = 25
**.channelModel.ue_height = 1.5
**.channelModel.building_height = 20

**.channelModel.street_wide = 20
**.channelModel.carrierFrequency = 2.6  # carrier frequency (in GHz)
**.channelModel.antennaGainUe = 0
**.channelModel.antennGainEnB = 0

**.channelModel.correlation_distance = 25
**.channelModel.dynamic_los = true   # If true enable the possibility to switch dinamically the LOS/NLOS pathloss computation
**.channelModel.fixed_los = false      # If dynamic-los is false this parameter, if true, compute LOS pathloss otherwise compute NLOS pathloss
**.channelModel.fading = false        # Enable/disable fading
**.channelModel.fading_type = "JAKES" # Fading type (JAKES or RAYGHLEY) if fading is enabled
**.channelModel.fading_paths = 6      # If jakes fading this parameter specify the number of path (tap channel)
**.channelModel.delay_rms = 363e-9

**.channelModel.extCell_interference = false # if true, enables the inter-cell interference computation for DL connections from external cells
**.channelModel.downlink_interference = true # if true, enables the inter-cell interference computation for DL connections
**.channelModel.uplink_interference = true   # if true, enables the interference computation for UL connections
**.channelModel.d2d_interference = true      # if true, enables the interference computation for D2D connections

#============= Protocol stack parameters  ===========
#(as in OpenAirInterface Configuration)
**.rlc.um.queueSize = 5000000B              # OpenAirInterface queue limit for RLC_MODE_UM  (Commit f58ad3c39f04ca7305202749a7dad2b25ef6b942 file rlc.c  method rlc_data_req() line 478)
**.mac.queueSize = 10000B					# reduce MAC queue size - OpenAirInterface does not queue packets in mac layer
**.pdcpRrc.backgroundRlc = 1                # default RLC type (0: TM, 1: UM, 2: AM)


#============= eNodeB and UE defaults  ===========
# eNB
*.eNB.mobility.initFromDisplayString = false
*.eNB.mobility.initialX = 20m
*.eNB.mobility.initialY = 20m
*.eNB*.nicType = "LteNicEnbD2D"
*.eNB*.lteNic.mac.amcMode = "D2D"

*.node[*].macCellId = 1
*.node[*].masterId = 1
*.node[*].nicType = "LteNicUeD2D"
*.node[*].radioDriver.dispatchInterfaceName = "cellular"
*.node[*].lteNic.mac.amcMode = "D2D" #"D2D"
*.node[*].lteNic.address = "auto"

**.coordConverterModule = "coordConverter"
**.identiyRegistryModule = "identiyRegistry"

[Config D2D_General]

## Enrolled multicast groups (TraCI) ##
#  Must be set in the HostAutoConfigurator (instead of ip4Config.xml), seperated by a single space character
*.node*[*].configurator.interfaces = "cellular" #"wlan"
*.node*[*].configurator.addressBase = "20.0.0.0"
*.node*[*].configurator.netmask = "255.0.0.0"

**.rlc.um.mapAllLcidsToSingleBearer = true  # OpenAirInterface uses a single bearer for all data
*.eNB.lteNic.processingDelayIn = 1134us    # additional processing delays
*.eNB.lteNic.processingDelayOut = 1134us
*.node*[*].lteNic.processingDelayIn = 5518us
*.node*[*].lteNic.processingDelayOut = 1134us


### Select CQI for D2D transmissions ###
# One-to-Many commulteNications work with fixed CQI values only. Set the parameter **.usePreconfiguredTxParams and
# select the desired CQI using the parameter **.d2dCqi
**.usePreconfiguredTxParams = true
**.d2dCqi = 7

[Config Env_General]

*.withStoryboard = false
*.traci.core.version = -1
*.traci.core.selfStopping = false
*.traci.launcher.hostname = "vadere"
*.traci.launcher.port = 9998
*.node[*].useArtery = true
*.node[*].aid.hasDensityMap = true
*.node[*].middleware.updateInterval = 0.1s # application trigger
*.node[*].middleware.datetime = "2020-06-01 12:35:00"
*.node[*].middleware.services = xmldoc("services.xml")
*.node[*].middleware.DenService.useCases = xml("<usecases/>")
*.node[*].vanetza.position.typename = "PedestrianPositionProvider"

# PhysicalEnviroment (*.physicalEnvironment.config set by other config)
*.physicalEnvironment.spaceMinX = -100m
*.physicalEnvironment.spaceMinY = -100m
*.physicalEnvironment.spaceMinZ = -100m
*.physicalEnvironment.spaceMaxX = 600m
*.physicalEnvironment.spaceMaxY = 600m
*.physicalEnvironment.spaceMaxZ = 600m

[Config Env_mf_2peds]
extends=Env_General
*.traci.launcher.vadereScenarioPath = "vadere/scenarios/mf_2peds.scenario"
*.physicalEnvironment.config = xmldoc("vadere/scenarios/mf_2peds_env.xml")

[Config Env_mf_001_initial_peds]
extends=Env_General
*.traci.launcher.vadereScenarioPath = "vadere/scenarios/mf_001_initial_peds.scenario"
*.physicalEnvironment.config = xmldoc("vadere/scenarios/mf_2peds_env.xml")
sim-time-limit= 150s #150s # error at 154.39


[Config Env_mf_001_noMesh]
extends=Env_General
*.traci.launcher.vadereScenarioPath = "vadere/scenarios/mf_001_noMesh.scenario"
*.physicalEnvironment.config = xmldoc("vadere/scenarios/mf_2peds_env.xml")
sim-time-limit= 150s #150s # error at 154.39

[Config Env_mf_2peds_no_obs]
extends=Env_General
*.traci.launcher.vadereScenarioPath = "vadere/scenarios/mf_2peds.scenario"
*.physicalEnvironment.config = xmldoc("vadere/scenarios/mf_2peds_no_env.xml")

[Config Env_mf_init_peds]
extends=Env_General
*.traci.launcher.vadereScenarioPath = "vadere/scenarios/mf_base_initial_peds.scenario"
*.physicalEnvironment.config = xmldoc("vadere/scenarios/mf_base_initial_peds_env")


# D2D only
[Config AppSetup1]
extends=D2D_General
### Traffic configuration ###

## ueD2DSender ##
*.node[*].numApps = 2
*.node[*].app[0].typename = "AlertSender"
*.node[*].app[0].localPort = 3088+ancestorIndex(0)
*.node[*].app[0].startTime = uniform(0s,0.02s)
*.node[*].app[0].stopTime = 350s
*.node[*].app[0].destAddress = "224.0.0.1" # ALL_HOST_MCAST (automatically joined)
*.node[*].app[0].destPort = 1000
*.node[*].app[1].typename = "AlertReceiver"
*.node[*].app[1].localPort = 1000
#*.ueD2D_a[*].app[2].typename = "UdpVideoStreamClient"
#*.ueD2D_a[*].app[2].serverAddress = "server"
#*.ueD2D_a[*].app[2].localPort = 9999
#*.ueD2D_a[*].app[2].serverPort = 3088
#*.ueD2D_a[*].app[2].startTime = uniform(0s, 0.02s)

# D2D only
[Config AppSetupVRU]
extends=D2D_General
### Traffic configuration ###
*.node[*].numApps = 1
*.node[*].app[0].typename = "VruAid" #"VruUdp"
*.node[*].app[0].localPort = 3088+ancestorIndex(0)
*.node[*].app[0].startTime = 340s #truncnormal(0s,0.02s)
*.node[*].app[0].stopTime = 350s
*.node[*].app[0].destAddresses = "224.0.0.1" # ALL_HOST_MCAST (automatically joined)
*.node[*].app[0].destPort = 3088
*.node[*].app[0].sendInterval = 0.1s
*.node[*].aid.aid.multicastInterface="cellular"

#
#[Config vadere00_geo]
#extends = AppSetupVRU, Env_mf_001_noMesh

[Config vadere00_geo]
extends = AppSetupVRU, Env_mf_2peds
sim-time-limit= 50s #150s # error at 154.39


#[Config vadere00_geo]
#extends = AppSetupVRU, Env_mf_001_initial_peds






